/* ----------------------------------------------------------
	 * save button loading animation
	----------------------------------------------------------*/

	$("a.buttonIconSave").on("click", function() {
		if(!$(this).hasClass("disabled"))
		{
			$(this).addClass("loading");
		}
	});

	/* ----------------------------------------------------------
	 * filter search button
	----------------------------------------------------------*/

	$(".filtersPanel .buttonIconSearch").click(function(e) {
		var loader = $("#loading_box");
		if (loader.length > 0) {
			$(".grid .infoBox div").hide();
			$("#loading_box").show();
		}
	});
	
/* ----------------------------------------------------------
 * debounce function
----------------------------------------------------------*/
var allowExecute = true;

function debounce(func) {
	if (allowExecute) {
		func();
		allowExecute = false;
	}
};

/* ----------------------------------------------------------
 * checkbox toggler
----------------------------------------------------------*/
function toggleCheckboxGroup($this) {
	var $checkboxGroup = $this.closest('.checkboxGroup');
	var $checkBoxes = $checkboxGroup.find('.groupItem');

	if($this.hasClass('checkAll')) {
		$checkBoxes.not('.owner').prop('checked', $this.is(':checked'));
		$checkBoxes.each(function(i, checkbox) {
			toggleSameIdCheckbox(jQuery(checkbox), $this.is(':checked'));
		});
	} else {
		$checkboxGroup.find('.checkAll').prop('checked', ($checkBoxes.size() == $checkBoxes.filter(':checked').size()));
	}
}

function toggleSameIdCheckbox($this, state) {
	if( $this.attr('data-id') ) {
		var $fineContactsSelection = $this.closest('.fineContactsSelection');
		var dataId = $this.attr('data-id');
		var $sameIdItems = $fineContactsSelection.find('.groupItem[data-id="' + dataId + '"]').not('.owner');
        $sameIdItems.prop("checked", state);
	}
}

/* ----------------------------------------------------------
 * Warning about Duplicate IDs
----------------------------------------------------------*/
function findDuplicateId() {
	jQuery('[id]').each(function(i,el){
		var ids = jQuery('[id=' + this.id + ']');
		if (ids.length > 1 && ids[0] == this) {
			console.warn('Multiple IDs #' + this.id, jQuery(this));
		}
	});
}	
